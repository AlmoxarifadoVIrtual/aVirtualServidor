/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 18 14:19:49 GMT 2017
 */

package lesufcg.almoxarifadovirtual.controle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import java.util.List;
import lesufcg.almoxarifadovirtual.controle.Controle;
import lesufcg.almoxarifadovirtual.controle.ControleUsuario;
import lesufcg.almoxarifadovirtual.modelo.usuario.FuncaoUsuario;
import lesufcg.almoxarifadovirtual.modelo.usuario.Usuario;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controle_ESTest extends Controle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(controleUsuario0).delete(anyLong());
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      boolean boolean0 = controle0.deletarUsuario((Long) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controle controle0 = new Controle();
      Usuario usuario0 = mock(Usuario.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(usuario0).toString();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn(usuario0).when(controleUsuario0).create(any(lesufcg.almoxarifadovirtual.modelo.usuario.Usuario.class));
      doReturn(usuario0).when(controleUsuario0).get(anyLong());
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      Long long0 = new Long(0L);
      Usuario usuario1 = controle0.getUsuario(long0);
      Usuario usuario2 = controle0.criarUsuario(usuario1);
      assertSame(usuario1, usuario2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controle controle0 = new Controle();
      Usuario usuario0 = mock(Usuario.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(usuario0).toString();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn(usuario0).when(controleUsuario0).get(anyLong());
      doReturn(true).when(controleUsuario0).update(any(lesufcg.almoxarifadovirtual.modelo.usuario.Usuario.class));
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      Long long0 = new Long(0L);
      Usuario usuario1 = controle0.getUsuario(long0);
      boolean boolean0 = controle0.atualizarUsuario(usuario1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(controleUsuario0).getByFuncao(any(lesufcg.almoxarifadovirtual.modelo.usuario.FuncaoUsuario.class));
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      FuncaoUsuario funcaoUsuario0 = FuncaoUsuario.ALMOXARIFE;
      List<Usuario> list0 = controle0.getUsuarioByFuncao(funcaoUsuario0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(controleUsuario0).delete(anyLong());
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      Long long0 = new Long(797L);
      boolean boolean0 = controle0.deletarUsuario(long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn((Usuario) null).when(controleUsuario0).create(any(lesufcg.almoxarifadovirtual.modelo.usuario.Usuario.class));
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      Usuario usuario0 = controle0.criarUsuario((Usuario) null);
      assertNull(usuario0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn((List<Object>) null).when(controleUsuario0).getAll();
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      List<Usuario> list0 = controle0.getAllUsuarios();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(controleUsuario0).update(any(lesufcg.almoxarifadovirtual.modelo.usuario.Usuario.class));
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      boolean boolean0 = controle0.atualizarUsuario((Usuario) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Controle controle0 = new Controle();
      ControleUsuario controleUsuario0 = mock(ControleUsuario.class, new ViolatedAssumptionAnswer());
      doReturn((Usuario) null).when(controleUsuario0).get(anyLong());
      Injector.inject(controle0, (Class<?>) Controle.class, "controleUsuario", (Object) controleUsuario0);
      Injector.validateBean(controle0, (Class<?>) Controle.class);
      Usuario usuario0 = controle0.getUsuario((Long) null);
      assertNull(usuario0);
  }
}
